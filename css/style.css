/* Animations for heading-primary-main 
   For animations to work have to specify
   animation-name and animation-duration
   on the class
*/
@keyframes moveInLeft {
  0% {
    /* Initial state */
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    /* Mid state */
    transform: translateX(1rem); }
  100% {
    /* Mid state */
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    /* Initial state */
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    /* Mid state */
    transform: translateX(-1rem); }
  100% {
    /* Mid state */
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    /* Initial state */
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    /* Mid state */
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing doesn't inherit by default set inherit on all elements
     and set the value to border-box in the body. This will allow the
     box-sizing to be changed and inherited at lower element levels */
  box-sizing: inherit; }

html {
  /* The default font size from the browser will be 16px if we don't set anything */
  /* Set the root font-size used by rem units in the html declaration */
  /* Use 10px as rems will be easier to calculate (div by 10)*/
  /* So font-size to a percentage of the browsers 16px default size */
  /* This means that changing the zoom (i.e. font size) in the browser will 
     change all values declared in rem */
  font-size: 62.5%;
  /* 10px / 16px = 62.5 % */ }

body {
  box-sizing: border-box; }

body {
  /* Always set default fonts in the body */
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 2rem;
  font-size: 1.6rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Fix to avoid unwanted "shakes" that can appear in animations */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* Add the moveInLeft animation */
    animation: moveInLeft 1s ease-out;
    /* Other useful animation properties
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; ...Starts fast then slows

    animation-delay: 0.5s;
    animation-iteration-count: 3; 
  */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.btn {
  /* Active - when the btn is clicked */
  /* Add an "after" pseudo element that looks the same as the btn
   It is treated the same way as a child element so 100% h & w
   makes it the same size.
*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all 0.1s;
    border-radius: 50rem;
    letter-spacing: 0.1rem;
    position: relative; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    /* in relation to the initial state */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 500px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* 0.75s delay */
    animation-fill-mode: backwards;
    /* Starts at initial state during delay */ }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 2rem; }
  .row::after {
    content: '';
    clear: both;
    display: table; }
  .row [class^='col-'] {
    float: left; }
    .row [class^='col-']:not(:last-child) {
      margin-right: 2rem; }
  .row .col-1-of-1 {
    width: calc( 1 *  ((100% - (2rem * (1 - 1))) / 1) + (2rem * (1 - 1))); }
  .row .col-1-of-2 {
    width: calc( 1 *  ((100% - (2rem * (2 - 1))) / 2) + (2rem * (1 - 1))); }
  .row .col-2-of-2 {
    width: calc( 2 *  ((100% - (2rem * (2 - 1))) / 2) + (2rem * (2 - 1))); }
  .row .col-1-of-3 {
    width: calc( 1 *  ((100% - (2rem * (3 - 1))) / 3) + (2rem * (1 - 1))); }
  .row .col-2-of-3 {
    width: calc( 2 *  ((100% - (2rem * (3 - 1))) / 3) + (2rem * (2 - 1))); }
  .row .col-3-of-3 {
    width: calc( 3 *  ((100% - (2rem * (3 - 1))) / 3) + (2rem * (3 - 1))); }
  .row .col-1-of-4 {
    width: calc( 1 *  ((100% - (2rem * (4 - 1))) / 4) + (2rem * (1 - 1))); }
  .row .col-2-of-4 {
    width: calc( 2 *  ((100% - (2rem * (4 - 1))) / 4) + (2rem * (2 - 1))); }
  .row .col-3-of-4 {
    width: calc( 3 *  ((100% - (2rem * (4 - 1))) / 4) + (2rem * (3 - 1))); }
  .row .col-4-of-4 {
    width: calc( 4 *  ((100% - (2rem * (4 - 1))) / 4) + (2rem * (4 - 1))); }
  .row .col-1-of-5 {
    width: calc( 1 *  ((100% - (2rem * (5 - 1))) / 5) + (2rem * (1 - 1))); }
  .row .col-2-of-5 {
    width: calc( 2 *  ((100% - (2rem * (5 - 1))) / 5) + (2rem * (2 - 1))); }
  .row .col-3-of-5 {
    width: calc( 3 *  ((100% - (2rem * (5 - 1))) / 5) + (2rem * (3 - 1))); }
  .row .col-4-of-5 {
    width: calc( 4 *  ((100% - (2rem * (5 - 1))) / 5) + (2rem * (4 - 1))); }
  .row .col-5-of-5 {
    width: calc( 5 *  ((100% - (2rem * (5 - 1))) / 5) + (2rem * (5 - 1))); }
  .row .col-1-of-6 {
    width: calc( 1 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (1 - 1))); }
  .row .col-2-of-6 {
    width: calc( 2 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (2 - 1))); }
  .row .col-3-of-6 {
    width: calc( 3 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (3 - 1))); }
  .row .col-4-of-6 {
    width: calc( 4 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (4 - 1))); }
  .row .col-5-of-6 {
    width: calc( 5 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (5 - 1))); }
  .row .col-6-of-6 {
    width: calc( 6 *  ((100% - (2rem * (6 - 1))) / 6) + (2rem * (6 - 1))); }
  .row .col-1-of-7 {
    width: calc( 1 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (1 - 1))); }
  .row .col-2-of-7 {
    width: calc( 2 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (2 - 1))); }
  .row .col-3-of-7 {
    width: calc( 3 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (3 - 1))); }
  .row .col-4-of-7 {
    width: calc( 4 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (4 - 1))); }
  .row .col-5-of-7 {
    width: calc( 5 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (5 - 1))); }
  .row .col-6-of-7 {
    width: calc( 6 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (6 - 1))); }
  .row .col-7-of-7 {
    width: calc( 7 *  ((100% - (2rem * (7 - 1))) / 7) + (2rem * (7 - 1))); }
  .row .col-1-of-8 {
    width: calc( 1 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (1 - 1))); }
  .row .col-2-of-8 {
    width: calc( 2 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (2 - 1))); }
  .row .col-3-of-8 {
    width: calc( 3 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (3 - 1))); }
  .row .col-4-of-8 {
    width: calc( 4 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (4 - 1))); }
  .row .col-5-of-8 {
    width: calc( 5 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (5 - 1))); }
  .row .col-6-of-8 {
    width: calc( 6 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (6 - 1))); }
  .row .col-7-of-8 {
    width: calc( 7 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (7 - 1))); }
  .row .col-8-of-8 {
    width: calc( 8 *  ((100% - (2rem * (8 - 1))) / 8) + (2rem * (8 - 1))); }
  .row .col-1-of-9 {
    width: calc( 1 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (1 - 1))); }
  .row .col-2-of-9 {
    width: calc( 2 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (2 - 1))); }
  .row .col-3-of-9 {
    width: calc( 3 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (3 - 1))); }
  .row .col-4-of-9 {
    width: calc( 4 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (4 - 1))); }
  .row .col-5-of-9 {
    width: calc( 5 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (5 - 1))); }
  .row .col-6-of-9 {
    width: calc( 6 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (6 - 1))); }
  .row .col-7-of-9 {
    width: calc( 7 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (7 - 1))); }
  .row .col-8-of-9 {
    width: calc( 8 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (8 - 1))); }
  .row .col-9-of-9 {
    width: calc( 9 *  ((100% - (2rem * (9 - 1))) / 9) + (2rem * (9 - 1))); }
  .row .col-1-of-10 {
    width: calc( 1 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (1 - 1))); }
  .row .col-2-of-10 {
    width: calc( 2 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (2 - 1))); }
  .row .col-3-of-10 {
    width: calc( 3 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (3 - 1))); }
  .row .col-4-of-10 {
    width: calc( 4 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (4 - 1))); }
  .row .col-5-of-10 {
    width: calc( 5 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (5 - 1))); }
  .row .col-6-of-10 {
    width: calc( 6 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (6 - 1))); }
  .row .col-7-of-10 {
    width: calc( 7 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (7 - 1))); }
  .row .col-8-of-10 {
    width: calc( 8 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (8 - 1))); }
  .row .col-9-of-10 {
    width: calc( 9 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (9 - 1))); }
  .row .col-10-of-10 {
    width: calc( 10 *  ((100% - (2rem * (10 - 1))) / 10) + (2rem * (10 - 1))); }
  .row .col-1-of-11 {
    width: calc( 1 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (1 - 1))); }
  .row .col-2-of-11 {
    width: calc( 2 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (2 - 1))); }
  .row .col-3-of-11 {
    width: calc( 3 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (3 - 1))); }
  .row .col-4-of-11 {
    width: calc( 4 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (4 - 1))); }
  .row .col-5-of-11 {
    width: calc( 5 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (5 - 1))); }
  .row .col-6-of-11 {
    width: calc( 6 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (6 - 1))); }
  .row .col-7-of-11 {
    width: calc( 7 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (7 - 1))); }
  .row .col-8-of-11 {
    width: calc( 8 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (8 - 1))); }
  .row .col-9-of-11 {
    width: calc( 9 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (9 - 1))); }
  .row .col-10-of-11 {
    width: calc( 10 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (10 - 1))); }
  .row .col-11-of-11 {
    width: calc( 11 *  ((100% - (2rem * (11 - 1))) / 11) + (2rem * (11 - 1))); }
  .row .col-1-of-12 {
    width: calc( 1 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (1 - 1))); }
  .row .col-2-of-12 {
    width: calc( 2 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (2 - 1))); }
  .row .col-3-of-12 {
    width: calc( 3 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (3 - 1))); }
  .row .col-4-of-12 {
    width: calc( 4 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (4 - 1))); }
  .row .col-5-of-12 {
    width: calc( 5 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (5 - 1))); }
  .row .col-6-of-12 {
    width: calc( 6 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (6 - 1))); }
  .row .col-7-of-12 {
    width: calc( 7 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (7 - 1))); }
  .row .col-8-of-12 {
    width: calc( 8 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (8 - 1))); }
  .row .col-9-of-12 {
    width: calc( 9 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (9 - 1))); }
  .row .col-10-of-12 {
    width: calc( 10 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (10 - 1))); }
  .row .col-11-of-12 {
    width: calc( 11 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (11 - 1))); }
  .row .col-12-of-12 {
    width: calc( 12 *  ((100% - (2rem * (12 - 1))) / 12) + (2rem * (12 - 1))); }

.header {
  height: 95vh;
  position: relative;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.808)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* Clip the bottom of the image
    ...coordinates clockwise from top left */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Position in center of header */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* Header is already position:relative */
    top: 40%;
    /* 40% of parent size */
    left: 50%;
    /* 50% of parent size */
    transform: translate(-50%, -50%);
    /* 50% of self */
    text-align: center; }
