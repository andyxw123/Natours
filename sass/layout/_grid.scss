// Variables
$grid-col-count: 12;
$grid-width: 114rem;
$gutter-vertical: 2rem;
$gutter-horizontal: 2rem;

// Calculate column widths
// NOTE: Subtracting from 100% caused unwanred wrapping the last column
//       but using 99.9% seems to resolve the issue
@function grid-col-width($columnOf, $columns) {
  @return calc(
    #{$columnOf} * 
    ((99.9% - (#{$gutter-horizontal} * (#{$columns} - 1))) / #{$columns})
    + (#{$gutter-horizontal} * (#{$columnOf} - 1))
  );
}

// Loop to create multiple classes
@mixin grid-col-x-of-y {
  @for $y from 1 through $grid-col-count {
    @for $x from 1 through $y {
      .col-#{$x}-of-#{$y} { 
        width: grid-col-width($x, $y);
      }
    }
  }
}

.row {
  max-width: $grid-width; // 1140px is the standard row width
  margin: 0 auto; // Center horizonally
  padding: 0 1rem;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;
  
  //mixin includes a loop to create classes for the various levels of columns
  @include grid-col-x-of-y;

  @include respond(tab-port) {
    max-width: 80rem;
    padding-left: 4rem;
    padding-right: 4rem;
  }

  @include respond(phone) {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  [class^='col-'] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }

    @include respond(tab-port) {
      float: none;
      width: 100% !important;

      &:not(:first-child) {
        margin-right: 0;
        // Include a margin where a column stacks onto the next row
        margin-top: $gutter-vertical !important;
      }
    }
  }
}


