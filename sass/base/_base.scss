*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing doesn't inherit by default set inherit on all elements
     and set the value to border-box in the body. This will allow the
     box-sizing to be changed and inherited at lower element levels */
  box-sizing: inherit;
}

html {
  /* The default font size from the browser will be 16px if we don't set anything */
  /* Set the root font-size used by rem units in the html declaration */
  /* Use 10px as rems will be easier to calculate (div by 10)*/
  /* So font-size to a percentage of the browsers 16px default size */
  /* This means that changing the zoom (i.e. font size) in the browser will 
     change all values declared in rem */

  // As the font-size below essentially dictates a scaling factor for
  // the website declare it here rather than in _typography.scss

  // This defines what 1rem represents
  font-size: 62.5%; // 1rem = 10px, 10/16 = 62.5%

  //MEDIA QUERIES... via the "respond" mixin
  // The declaration content is passed to the mixin which contains a @content keyword. 
  // The parameter dictates the required breakpoint & appropriate query;

  // Order queries from larger to smaller since this is a
  // desktop first design strategy.
  // NOTE: For mobile first designs, need to declare in
  //       the OPPOSITE order
  @include respond(desk-big) {  // > 1800px
    font-size: 85%;     // 1rem = 12px, 12/16 = 75%
  }

  @include respond(tab-land) {  // < 1200px
    font-size: 56.25%;  // 1rem = 9px, 9/16 = 56.25%
  }

  @include respond(tab-port) {  // < 900px
    font-size: 50%;     // 1rem = 8px, 8/16 = 50%
  }

  @include respond(phone) {     // < 600px
    font-size: 43.75%;    // 1rem = 7px, 7/16 = 43.75%
  }
}

body {
  // _typography.scss also contains font declaration for the body
  box-sizing: border-box;
  padding: 2rem;

  @include respond(tab-port) {
    padding: 0;
  }
}

::selection {
  background-color: $color-primary;
  color: $color-white;
}