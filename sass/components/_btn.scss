.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all 0.1s;
    border-radius: 50rem;
    letter-spacing: 0.1rem;
    position: relative;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  /* Active - when the btn is clicked */
  &:active {
    transform: translateY(-1px); /* in relation to the initial state */
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  /* Add an "after" pseudo element that looks the same as the btn
   It is treated the same way as a child element so 100% h & w
   makes it the same size.
*/

  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 500px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s; /* 0.75s delay */
    animation-fill-mode: backwards; /* Starts at initial state during delay */
  }
}

.btn-text {
  &:link,
  &:visited {
    background-color: $color-primary;
    color: $color-white;
    display: inline-block;
    padding: .25rem 1.5rem;
    text-decoration: none;
    transition: all .1s;
    border-radius: 10rem;
  }

  &:hover {
    background-color: $color-primary-dark;
    transform: translateY(-2px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
  }

  &:active {
    transform: translateY(0); /* in relation to the initial state */
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }
}